openapi: 3.0.0
info:
  title: School API
  description: API of the "School" task
  contact:
    name: Zhadaev Alexander
    url: www.zhadaev.ru
    email: zhadaevs@yandex.ru
  version: 1.0-SNAPSHOT
servers: 
 # - url: http://localhost:8080/api
  - url: localhost:8080/api
paths:
  /groups:
    summary: Represents a groups
    description: >
      This resource represents an all groups in the system.
    get:
      summary: Get all groups
      description: >
        This method allows you to get a list of all school groups
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Group'
    post:
      summary: Add a new group
      description: >
        This method adds a new group to the school.
      requestBody:
        description: >
          You must specify the group parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Group'
    delete:
      summary: Delete all groups
      description: This method removes all groups.
      responses:
        '200':
          description: Successful operation
  /groups/{id}:
    summary: Represents a group
    description: >
      This resource represents an individual group in the system.
      Each group is identified by a numeric `id`.
    get:
      summary: Get a group by id
      description: >
        This method allows you to get a school group by its id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    put:
      summary: Edit a group
      description: >
        This method updates the group with the specified id. The values of the group properties are replaced with the values from the request body. Unspecified values are replaced with default values.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the group parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Group'
    patch:
      summary: Edit a group
      description: >
        This method updates the group with the specified id. The values of the group properties are replaced with the values from the request body. Unspecified values are not changed.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the group parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Group'
    delete:
      summary: Delete a group
      description: This method removes the group with the specified id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation
  /courses:
    summary: Represents a courses
    description: >
      This resource represents an all courses in the system.
    get:
      summary: Get all courses
      description: >
        This method allows you to get a list of all school courses
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Add a new course
      description: >
        This method adds a new course to the school.
      requestBody:
        description: >
          You must specify the course parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Course'
    delete:
      summary: Delete all courses
      description: This method removes all courses.
      responses:
        '200':
          description: Successful operation
  /courses/{id}:
    summary: Represents a course
    description: >
      This resource represents an individual course in the system.
      Each course is identified by a numeric `id`.
    get:
      summary: Get a course by id
      description: >
        This method allows you to get a school course by its id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    put:
      summary: Edit a course
      description: >
        This method updates the course with the specified id. The values of the course properties are replaced with the values from the request body. Unspecified values are replaced with default values.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the course parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Course'
    patch:
      summary: Edit a course
      description: >
        This method updates the course with the specified id. The values of the course properties are replaced with the values from the request body. Unspecified values are not changed.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the course parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Course'
    delete:
      summary: Delete a course
      description: This method removes the course with the specified id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation            
  /students:
    summary: Represents a students
    description: >
      This resource represents an all students in the system.
    get:
      summary: Get all students
      description: >
        This method allows you to get a list of all school students
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Add a new student
      description: >
        This method adds a new student to the school.
      requestBody:
        description: >
          You must specify the student parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Student'
    delete:
      summary: Delete all students
      description: This method removes all students.
      responses:
        '200':
          description: Successful operation
  /students/{id}:
    summary: Represents a student
    description: >
      This resource represents an individual student in the system.
      Each student is identified by a numeric `id`.
    get:
      summary: Get a student by id
      description: >
        This method allows you to get a school student by its id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    put:
      summary: Edit a student
      description: >
        This method updates the student with the specified id. The values of the student properties are replaced with the values from the request body. Unspecified values are replaced with default values.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the student parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Student'
    patch:
      summary: Edit a student
      description: >
        This method updates the student with the specified id. The values of the student properties are replaced with the values from the request body. Unspecified values are not changed.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      requestBody:
        description: >
          You must specify the student parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
       '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Student'
    delete:
      summary: Delete a student
      description: This method removes the student with the specified id.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user id
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Course:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    Student:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        group:
          $ref: '#/components/schemas/Group'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'